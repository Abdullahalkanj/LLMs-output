/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package main;

import java.util.Scanner;

/**
 * This is the generated Hello World Greeting App.
 */
public class App {

  /**
   * Returns a nice greeting message.
   *
   * @return the greeing message.
   */
  public String getGreeting() {
    return "Hello World!!";
  }

  /**
   * The App starting point.
   *
   * @param args Unused program arguments.
   */
  public static void main(String[] args) {
    App theApp = new App();
    System.out.println(theApp.getGreeting());
    String fileName = "regestiry.data";
    Registry registry = new Registry(fileName);
    registry.loadData();
    
    try (Scanner scanner = new Scanner(System.in)) {
      while (true) {
        System.out.println("\n1. Create New Member");
        System.out.println("2. List All Members");
        System.out.println("3. Select a Particular Member");
        System.out.println("4. Exit");
        System.out.print("Enter choice: ");

        String choice = scanner.nextLine();
        try {
          switch (choice) {
            case "1":
              registry.addMemberFromUserInput();
              break;
            case "2":
              registry.displayMembers();
              break;
            case "3":
              registry.displayMembersWithEmail();
              System.out.println("Enter the member ID you want to select:");
              String memberId = scanner.nextLine();
              Member selectedMember = registry.findMemberById(memberId);
        
              if (selectedMember != null) {
                registry.displayBoatsForMember(selectedMember);
                while (true) {
                  System.out.println("\nOptions for " + memberId + ":");
                  System.out.println("1. Delete Member");
                  System.out.println("2. Add a New Boat");
                  System.out.println("3. Select a boat by name");
                  System.out.println("4. Return to Main Menu");
                  System.out.print("Enter choice: ");
        
                  String subChoice = scanner.nextLine();
                  switch (subChoice) {
                    case "1":
                      registry.deleteMember(selectedMember);
                      System.out.println(memberId + " has been deleted from the registry.");
                      break; // This will exit the inner loop and bring user back to main menu.
        
                    case "2":
                      System.out.println("Add a new boat for " + memberId + ":");
                      registry.addBoatFromUserInput(memberId);
                      break;
                    case "3":
                      System.out.println("Enter the name of the boat you want to select:");
                      String boatName = scanner.nextLine();
                      boolean boatFound = registry.displayDetails(boatName); 
                
                      if (!boatFound) {
                        continue; // Go back to main menu.
                      }

                      System.out.println("\n1. Delete boat");
                      System.out.println("2. Return to main menu");
                      System.out.print("Enter choice: ");

                      String boatChoice = scanner.nextLine();
                      switch (boatChoice) {
                        case "1":
                          boolean isDeleted = registry.deleteBoatByName(boatName);
                          if (isDeleted) {
                            System.out.println("Boat named " + boatName + " deleted successfully!");
                          } else {
                            System.out.println("Boat named " + boatName + " not found in the registry.");
                          
                          }
                          break;
                        case "2":
                          // This will just go back to the main loop.
                          break;
                        default:
                          System.out.println("Invalid option, please choose again.");
                          break;
                      }
                      break;
                    case "4":
                      break; // This will just exit the inner loop and bring user back to main menu.
        
                    default:
                      System.out.println("Invalid option, please choose again.");
                      continue;  // This will continue the inner loop, asking the user again.
                  }
                  break; // If the choice is 1, 2, or 3, this will break out of the inner while loop.
                }
              } else {
                System.out.println("Member not found.");
              }
              break;
            case "4":
              System.out.println("Saving and Exiting...");
              registry.saveData();
              System.exit(0);
              
              break;
            default:
              System.out.println("Invalid option, please choose again.");
              break;
          }
        } catch (Exception e) {
          System.out.println("An error occurred: " + e.getMessage());
        }
      }
    }
  }
}
